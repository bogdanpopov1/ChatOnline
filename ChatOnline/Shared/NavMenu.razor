@using ChatOnline.Data
@inject UserContext UserContext
@inject NavigationManager NavManager

<nav class="navbar navbar-expand-lg navbar-light bg-light">
    <div class="container-fluid">
        <div class="container">
            <a class="navbar-brand" href="/">CHAT.ONLINE</a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            @if (UserContext.CurrentUser is null)
            {
                <div class="collapse navbar-collapse" id="navbarNav">
                    <a href="#">Главная</a>
                    <a href="#">О нас</a>
                    <a href="#">Контакты</a>
                    <a href="#">Вопросы и ответы</a>
                </div>
            }
            @if (UserContext.CurrentUser is null)
            {
                <div class="navbar-buttons">
                    <button class="btn btn-outline-secondary" @onclick=Registrate>Зарегистрироваться</button>
                    <button class="btn btn-primary" @onclick=SignIn>Войти</button>
                </div>
            } else
            {
                <button class="btn btn-primary" @onclick=LogOut>Выйти</button>
            }
        </div>
    </div>
</nav>

@if (_registrationTrigger)
{
    <RegistrationModal OnClose="CloseRegModal"></RegistrationModal>
} else if (_signInTrigger)
{
    <SignInModal OnClose="CloseSignInModal"></SignInModal>
}

@code {
    private bool collapseNavMenu = true;
    private bool _registrationTrigger = false;
    private bool _signInTrigger = false;
    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    public void Registrate()
    {
        _registrationTrigger = true;
    }

    public void SignIn()
    {
        _signInTrigger = true;
    }

    public void LogOut()
    {
        UserContext.CurrentUser = null;
        NavManager.NavigateTo("/");
    }

    public void CloseRegModal() {
        _registrationTrigger = false;
    }

    public void CloseSignInModal()
    {
        _signInTrigger = false;
    }
}
